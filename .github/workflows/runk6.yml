name: k6-xk6-parallel-tests
permissions: write-all
on:
  workflow_dispatch:
    inputs:
      environment:
        description: 'Select the environment to run the test'
        required: true
        default: staging
        type: choice
        options:
          - staging
      scripts:
        description: 'Select the scripts to run'
        required: true
        type: choice
        options:
          - All
          - Admin
          - Landlord
      concurrent_users:
        description: 'Number of concurrent users'
        required: true
        default: "2"
        type: string
      steady_state_time:
        description: 'Steady-state time in minutes'
        required: true
        default: "1"
        type: string
       
jobs:
  run-test:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        
      # Install Go
      - name: Install Go
        uses: actions/setup-go@v5

       # Build xk6 binary with extensions
      - name: Build custom xk6 binary
        run: |
          go install go.k6.io/xk6/cmd/xk6@latest
          xk6 build --with github.com/avitalique/xk6-file@latest --with github.com/LeonAdato/xk6-output-statsd

        # Run multiple K6 tests in parallel using background processes
      - name: Run the test
        run: |
          users=${{inputs.concurrent_users}}
          steady_time=$((${{inputs.steady_state_time}}))
          # Ramp up time - 1 every 2 seconds for admin script
          rampup_admin=$(($users * 2))
          rampup_ll=$(($users * 4))

          echo "Users: ${users}"
          echo "Steady Time: ${steady_time} seconds"
          echo "Rampup Admin: ${rampup_admin} seconds"
           
          if [ "${{ github.event.inputs.scripts }}" == 'All' ]; then
            ./k6 run --stage ${rampup_admin}s:${users},${steady_time}m:${users},${rampup_admin}s:0 scripts/Admin/script1.js &
            ./k6 run --stage ${rampup_admin}s:${users},${steady_time}m:${users},${rampup_admin}s:0 scripts/Landlord/script2.js &
            wait
          elif [ "${{ github.event.inputs.scripts }}" == 'Admin' ]; then
            ./k6 run --stage ${rampup_admin}s:${users},${steady_time}m:${users},${rampup_admin}s:0 scripts/Admin/script1.js
          elif [ "${{ github.event.inputs.scripts }}" == 'Landlord' ]; then
            ./k6 run --stage ${rampup_admin}s:${users},${steady_time}m:${users},${rampup_admin}s:0 scripts/Landlord/script2.js
          fi

      - name: Upload k6 Test Summary Artifact
        uses: actions/upload-artifact@v3
        with:
          name: k6-summary
          path: csvContent.csv
